# -*- coding: utf-8 -*-
"""Sentiment_Analysis.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/140RNuiXpFCJIKswyBvzY41zfbPXjUf5T
"""

import pandas as pd
import nltk
from nltk.corpus import stopwords
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report

# Load dataset
df = pd.read_csv("/content/Womens Clothing E-Commerce Reviews.csv.zip")
df = df[['Review Text', 'Rating']].dropna()

# Map Ratings to Sentiment
def label_sentiment(rating):
    if rating >= 4:
        return "positive"
    elif rating == 3:
        return "neutral"
    else:
        return "negative"

df['Sentiment'] = df['Rating'].apply(label_sentiment)

# Remove stopwords and tokenize
import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords

stop_words = set(stopwords.words('english'))

def clean_text(text):
    words = text.lower().split()
    return ' '.join([word for word in words if word not in stop_words])

df['Cleaned_Review'] = df['Review Text'].apply(clean_text)

# Vectorize
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['Cleaned_Review'])
y = df['Sentiment']

# Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = MultinomialNB()
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))

# Enter user review
user_review = input("Enter a product review: ")
user_review_clean = clean_text(user_review)
user_vec = vectorizer.transform([user_review_clean])
prediction = model.predict(user_vec)

print(f"\nPredicted Sentiment: {prediction[0]}")

!pip install gradio

import gradio as gr

def predict_sentiment(review):
    cleaned = clean_text(review)
    vec = vectorizer.transform([cleaned])
    prediction = model.predict(vec)
    return prediction[0]

interface = gr.Interface(fn=predict_sentiment, inputs="text", outputs="text",
                         title="Product Review Sentiment Analyzer",
                         description="Enter a product review and see if it's positive, negative, or neutral.")

interface.launch(share=True)